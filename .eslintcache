[{"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/index.tsx":"1","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/reportWebVitals.ts":"2","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/App.tsx":"3","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/store/rootReducer.ts":"4","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/routes/Routes.tsx":"5","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/redux/reducer.ts":"6","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/index.ts":"7","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/redux/actionTypes.ts":"8","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/components/HomeContainer.tsx":"9","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/components/Home.js":"10","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/components/QuestionDetailsModal/QuestionDetailsModal.js":"11","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/redux/action.ts":"12","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/utils/api.ts":"13","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/utils/index.ts":"14"},{"size":500,"mtime":1610208976632,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1610208976636,"results":"17","hashOfConfig":"16"},{"size":844,"mtime":1610208976632,"results":"18","hashOfConfig":"16"},{"size":187,"mtime":1610211271453,"results":"19","hashOfConfig":"16"},{"size":271,"mtime":1610208976636,"results":"20","hashOfConfig":"16"},{"size":1496,"mtime":1610211259501,"results":"21","hashOfConfig":"16"},{"size":104,"mtime":1610208976636,"results":"22","hashOfConfig":"16"},{"size":286,"mtime":1610208976636,"results":"23","hashOfConfig":"16"},{"size":2067,"mtime":1610210508422,"results":"24","hashOfConfig":"16"},{"size":4842,"mtime":1610208976636,"results":"25","hashOfConfig":"16"},{"size":2083,"mtime":1610208976636,"results":"26","hashOfConfig":"16"},{"size":476,"mtime":1610208976636,"results":"27","hashOfConfig":"16"},{"size":390,"mtime":1610208976636,"results":"28","hashOfConfig":"16"},{"size":125,"mtime":1610208976636,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"f2hbva",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/index.tsx",[],["64","65"],"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/reportWebVitals.ts",[],"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/App.tsx",[],"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/store/rootReducer.ts",[],"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/routes/Routes.tsx",[],"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/redux/reducer.ts",["66","67"],"import { ReducerAction } from './../../../types/action'\nimport { AppState, StateResult, Questions } from './../../../types/state'\nimport * as actionTypes from './actionTypes'\n\n// interface INITIAL_STATE {\n//   questions: object\n//   selectedQuestion: object\n//   getQuestionsLoading: boolean\n// }\n\nconst INITIAL_STATE:AppState = {\n  questions: {\n    items: [],\n    has_more: false,\n    quota_max: 0,\n    quota_remaining: 0\n  },\n  selectedQuestion: null,\n  getQuestionsLoading: null\n}\n\n// type State = INITIAL_STATE[]\n\nconst appReducer = (state: AppState = INITIAL_STATE, action: ReducerAction) => {\n  const { type, payload } = action\n\n  switch (type) {\n    case actionTypes.GET_QUESTIONS_LOADING:\n      return {\n        ...state,\n        getQuestionsLoading: true\n      }\n    case actionTypes.GET_QUESTIONS_SUCCESS: {\n      let tempItems\n      if (state.questions.items && state.questions.items.length > 0) {\n        tempItems = [...state.questions.items, ...payload.items]\n      } else {\n        tempItems = payload.items\n      }\n      return {\n        ...state,\n        getQuestionsLoading: false,\n        questions: {\n          ...payload,\n          items: tempItems\n        }\n      }\n    }\n    case actionTypes.GET_QUESTIONS_ERROR:\n      return {\n        ...state,\n        getQuestionsLoading: false\n      }\n    case actionTypes.SET_SELECTED_QUESTION:\n      return {\n        ...state,\n        selectedQuestion: payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default appReducer\n","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/index.ts",[],"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/redux/actionTypes.ts",[],"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/components/HomeContainer.tsx",["68"],"import React, { useEffect, useState, Dispatch } from 'react'\nimport { connect } from 'react-redux'\nimport { ReducerAction } from '../../../types/action'\nimport { Question, Questions, StateResult } from '../../../types/state'\n\nimport * as action from '../redux/action'\nimport Home from './Home'\nimport QuestionDetailsModal from './QuestionDetailsModal/QuestionDetailsModal'\n\ntype Props = {\n  questions: Questions;\n  getQuestions: (pageNumber: number) =>  void;\n  setSelectedQuestion: (question: Question) => void;\n  selectedQuestion: any;\n  getQuestionsLoading: any;\n}\n\nconst HomeContainer: React.FC<Props> = ({\n  questions,\n  getQuestions,\n  setSelectedQuestion,\n  selectedQuestion,\n  getQuestionsLoading\n}) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const [currentPage, setCurrentPage] = useState<number>(1)\n  useEffect(() => {\n    getQuestions(currentPage)\n  }, [])\n\n  const handleModal = () => {\n    setIsOpen(!isOpen)\n  }\n\n  const viewDetailsBtnHandler = async (e: React.MouseEvent<HTMLButtonElement>, question: Question) => {\n    await setSelectedQuestion(question)\n    handleModal()\n  }\n\n  return (\n    <>\n      <Home\n        questions={questions}\n        viewDetailsBtnHandler={viewDetailsBtnHandler}\n        getQuestionsLoading={getQuestionsLoading}\n        getQuestions={getQuestions}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n      <QuestionDetailsModal\n        open={isOpen}\n        handleModal={handleModal}\n        selectedQuestion={selectedQuestion}\n      />\n    </>\n  )\n}\n\nconst mapStateToProps = (state: StateResult) => ({\n  questions: state.app.questions,\n  selectedQuestion: state.app.selectedQuestion,\n  getQuestionsLoading: state.app.getQuestionsLoading\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch<ReducerAction>) => ({\n  getQuestions: (pageNumber: number) => dispatch(action.getQuestions(pageNumber)),\n  setSelectedQuestion: (question: Question) =>\n    dispatch(action.setSelectedQuestion(question))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer)\n","/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/components/Home.js",["69"],"import React, { useRef, useCallback } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport { formatedDate, noop } from '../../../utils'\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell)\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover\n    }\n  }\n}))(TableRow)\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: '100vh'\n  },\n  table: {\n    minWidth: 650\n  },\n  spinner: {\n    position: 'absolute',\n    left: '50%',\n    top: '50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}))\n\nconst Home = ({\n  questions,\n  viewDetailsBtnHandler,\n  getQuestionsLoading,\n  getQuestions,\n  currentPage,\n  setCurrentPage\n}) => {\n  const observer = useRef()\n  const pageNumber = useRef(0)\n  const lastQuestionElementref = useCallback(\n    (node) => {\n      if (getQuestionsLoading) return\n      if (observer.current) observer.current.disconnect()\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && questions.has_more) {\n          pageNumber.current = currentPage + 1\n          setCurrentPage(pageNumber.current)\n          getQuestions(pageNumber.current)\n        }\n      })\n      if (node) observer.current.observe(node)\n    },\n    [getQuestionsLoading, questions.has_more]\n  )\n  const classes = useStyles()\n  return (\n    <>\n      <CssBaseline />\n      {questions && questions.items && questions.items.length > 0 ? (\n        <Paper className={classes.root}>\n          <TableContainer className={classes.container}>\n            <Table\n              stickyHeader\n              className={classes.table}\n              aria-label='simple table'\n            >\n              <TableHead>\n                <StyledTableRow>\n                  <StyledTableCell>Author</StyledTableCell>\n                  <StyledTableCell>Title</StyledTableCell>\n                  <StyledTableCell>Creation Date</StyledTableCell>\n                  <StyledTableCell>View Details</StyledTableCell>\n                </StyledTableRow>\n              </TableHead>\n              <TableBody>\n                {questions.items.map((question, index) => {\n                  return (\n                    <StyledTableRow\n                      key={question.question_id}\n                      ref={\n                        questions.items.length === index + 1\n                          ? lastQuestionElementref\n                          : null\n                      }\n                    >\n                      <StyledTableCell component='th' scope='row'>\n                        {question.owner.display_name}\n                      </StyledTableCell>\n                      <StyledTableCell>{question.title}</StyledTableCell>\n                      <StyledTableCell>\n                        {formatedDate(question.creation_date)}\n                      </StyledTableCell>\n                      <StyledTableCell>\n                        <Button\n                          variant='contained'\n                          color='primary'\n                          onClick={(e) => viewDetailsBtnHandler(e, question)}\n                        >\n                          View\n                        </Button>\n                      </StyledTableCell>\n                    </StyledTableRow>\n                  )\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Paper>\n      ) : (\n        <>\n          {getQuestionsLoading && (\n            <div className={classes.spinner}>\n              <CircularProgress color='secondary' />\n            </div>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nHome.propTypes = {\n  questions: PropTypes.instanceOf(Object),\n  viewDetailsBtnHandler: PropTypes.func,\n  getQuestionsLoading: PropTypes.bool,\n  getQuestions: PropTypes.func,\n  currentPage: PropTypes.number,\n  setCurrentPage: PropTypes.func\n}\n\nHome.defaultProps = {\n  questions: {},\n  viewDetailsBtnHandler: noop,\n  getQuestionsLoading: false,\n  getQuestions: noop,\n  currentPage: 0,\n  setCurrentPage: noop\n}\n\nexport default Home\n",["70","71"],"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/components/QuestionDetailsModal/QuestionDetailsModal.js",[],"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/modules/home/redux/action.ts",[],"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/utils/api.ts",[],"/home/sdr/projects/kunal_nividata/iqm-task-typescript/src/utils/index.ts",[],["72","73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":20,"nodeType":"80","messageId":"81","endLine":2,"endColumn":31},{"ruleId":"78","severity":1,"message":"82","line":2,"column":33,"nodeType":"80","messageId":"81","endLine":2,"endColumn":42},{"ruleId":"83","severity":1,"message":"84","line":29,"column":6,"nodeType":"85","endLine":29,"endColumn":8,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":77,"column":5,"nodeType":"85","endLine":77,"endColumn":46,"suggestions":"88"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"74","replacedBy":"89"},{"ruleId":"76","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'StateResult' is defined but never used.","Identifier","unusedVar","'Questions' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage' and 'getQuestions'. Either include them or remove the dependency array. If 'getQuestions' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["93"],"React Hook useCallback has missing dependencies: 'currentPage', 'getQuestions', and 'setCurrentPage'. Either include them or remove the dependency array. If 'setCurrentPage' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["94"],["91"],["92"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [currentPage, getQuestions]",{"range":"99","text":"100"},"Update the dependencies array to be: [currentPage, getQuestions, getQuestionsLoading, questions.has_more, setCurrentPage]",{"range":"101","text":"102"},[883,885],"[currentPage, getQuestions]",[2053,2094],"[currentPage, getQuestions, getQuestionsLoading, questions.has_more, setCurrentPage]"]